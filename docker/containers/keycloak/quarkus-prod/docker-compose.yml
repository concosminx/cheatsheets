version: '3'
volumes:
  postgres_data:
      driver: local
services:
  postgres:
      container_name: keycloak-db
      image: postgres:14.6
      env_file:
        - .env
      volumes:
        - ./postgres:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
        POSTGRES_USER: ${KEYCLOAK_DB_USER}
  keycloak:
      container_name: keycloak-server
      image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
      env_file:
        - .env
      environment:
        KC_FEATURES: preview
        KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
        KEYCLOAK_ADMIN: ${KEYCLOAK_USER}
        KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      entrypoint: /opt/keycloak/bin/kc.sh start --https-certificate-file=/data/keycloak-server.crt.pem --https-certificate-key-file=/data/keycloak-server.key.pem
      volumes:
        - ./data:/data:rw
      ports:
        #- 8080:8080
        - 8443:8443
      depends_on:
        - postgres

#networks:
#  default:
#    name: my-main-net
#    external: true

#Note:
#Generate a self signed certificate in ./data folder
#openssl req -newkey rsa:2048 -nodes -keyout keycloak-server.key.pem -x509 -days 3650 -out keycloak-server.crt.pem

# use -proxy reencrypt if nginx comunicate over HTTPS with keycloak; 
# use -proxy egde if nginx comunicate over HTTP with keycloak; 
